#!/bin/sh

echo Loading shell environment ... >&2

_begin_esc()
{
    [ -n "$BASH_VERSION" ] && printf '\x01' && return
    [ -n "$ZSH_VERSION" ] && printf '%%{' && return
}

_end_esc()
{
    [ -n "$BASH_VERSION" ] && printf '\x02' && return
    [ -n "$ZSH_VERSION" ] && printf '%%}' && return
}

_tput_color()
{
    _begin_esc
    tput setaf "$1"
    _end_esc
}

_tput_reset()
{
    _begin_esc
    tput sgr0
    _end_esc
}

_color_palette()
{
    if uname | grep -q Darwin
    then
        YELLOW=148
        GREEN=2
        PINK=170
    else
        YELLOW=226
        GREEN=46
        PINK=199
    fi
}

_active_prompt()
{
    _color_palette

    # Git branch
    git_branch=$(git branch 2> /dev/null | sed -n 's/^\* *//p')
    if [ -n "$git_branch" ]
    then
        _tput_color "$YELLOW"
        printf '[%s] ' "$git_branch"
    fi
    unset git_branch

    # Current directory
    if [ "$PWD" != "$HOME" ]
    then
        if printf '%s' "$PWD" | grep -q "^$HOME"
        then
            neat_path="~${PWD#$HOME}"
        else
            neat_path=$PWD
        fi
        _tput_color "$GREEN"
        printf '%s' "$neat_path"
        unset neat_path
    fi

    # Dollar sign
    _tput_color "$PINK"
    printf '$ '
    _tput_reset
}


PS1='$(_active_prompt)'

gitme()
{
    git config user.name "Sunaina Pai"
    git config user.email "sunainapai.in@gmail.com"
    git config user.name
    git config user.email
}

uncap()
{
    setxkbmap -option caps:escape
}

red()
{
    case $1 in
        off)
            pkill redshift
            ;;
        [0-9]*)
            pkill redshift
            pkill redshift
            redshift -v -l 0:0 -t $1:$1 > ~/redshift.log 2>&1 &
            ;;
        "")
            pkill redshift
            pkill redshift
            redshift -v -l 13:77 -t 5000:3700 > ~/redshift.log 2>&1 &
            ;;
        *)
            echo 'Usage: red [off | <temperature>]' >&2
            ;;
    esac
}

makemp3()
{
    time for f in "$@"
    do
        ffmpeg -y -i "$f" -q:a 0 "${f%.*}.mp3"
    done
}

alias vi='gvim'

if [ -n "$BASH_VERSION" ]
then
    echo Loading Bash environment ... >&2

    # Enable completions.
    [ -r "/usr/local/etc/profile.d/bash_completion.sh" ] &&
	. "/usr/local/etc/profile.d/bash_completion.sh"

elif [ -n "ZSH_VERSION" ]
then
    echo Loading ZSH environment ... >&2

    # Allow command substitution in prompt (disabled by default)
    setopt prompt_subst

    # Enable completions.
    autoload bashcompinit && bashcompinit
    autoload compinit && compinit
fi


echo Done >&2

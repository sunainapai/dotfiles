#!/bin/sh


DOT_FILES="
vimrc
"


main()
{
    parse_arguments "$@"

    if [ $undo = no ]
    then
        setup_dot_files
        setup_bashrc
        setup_git_config
    else
        undo_dot_files
        undo_bashrc
        undo_git_config
    fi
}


parse_arguments()
{
    undo=no

    while [ "$#" -gt 0 ]
    do
        case $1 in
            -u | --undo | --uninstall)
                undo=yes
                shift
                ;;
            -h | --help)
                show_help
                exit
                ;;
            -?*)
                quit Unknown option \""$1"\".
                ;;
            *)
                quit Surplus argument \""$1"\".
                ;;
        esac
    done
}


setup_dot_files()
{
    printf "%s" "$DOT_FILES" | grep [[:graph:]] | while read filename
    do
        target="$PWD/$filename"
        link=~/."$filename"

        if [ -f "$link" ]
        then
            err Link "$link" already exists
        elif [ ! -f "$target" ]
        then
            err File "$target" does not exist
        elif ln -s "$target" "$link"
        then
            log Created "$link -> $target"
        fi
    done
}


undo_dot_files()
{
    printf "%s" "$DOT_FILES" | grep [[:graph:]] | while read filename
    do
        link=~/."$filename"
        if [ ! -f "$link" ]
        then
            err Link "$link" does not exist
        elif rm "$link"
        then
            log Deleted "$link"
        fi
    done
}


# Comment to mark lines inserted by this script.
SETUP_MARK='# Added by setup script'


setup_bashrc()
{
    bashrc="$PWD/bashrc"

    [ -f ~/.bashrc ] && file=~/.bashrc || file=~/.bash_profile

    cmd="[ -f \"$PWD/bashrc\" ] && . \"$PWD/bashrc\" $SETUP_MARK"

    if grep -q "$SETUP_MARK" "$file"
    then
        err File "$file" is already updated to load bashrc
    elif echo "$cmd" >> "$file"
    then
        log Updated "$file" to load bashrc
    fi

    unset bashrc
    unset file
    unset cmd
}


undo_bashrc()
{
    for file in ~/.bashrc ~/.bash_profile
    do
        if [ -f "$file" ]
        then
            if grep -q "$SETUP_MARK" "$file"
            then
                sed "/$SETUP_MARK/d" "$file" > "$file.tmp" &&
                mv "$file.tmp" "$file" &&
                log File "$file" updated to not load bashrc
            else
                err File "$file" does not load bashrc
            fi
        else
            err File "$file" does not exist
        fi
    done
    unset file
}


setup_git_config()
{
    sh -x ./gitconfig.sh
}


undo_git_config()
{
    awk '/^git/ {print $1 " " $2 " " $3 " --unset " $4}' gitconfig.sh | sh -x
}


err()
{
    log "$0: $*"
}


log()
{
    printf "%s\n" "$*" >&2
}


quit()
{
    err "$*"
    exit 1
}

show_help()
{
    printf "Usage: $0 [-u] [-h]

Setup files in home directory.

Options:
  -u, --undo  Undo setup.
  -h, --help  Show this help and exit.
"
}


main "$@"
